
1) Leur donner une structure

- dossier pour le cours sur leur OneDrive du Collège
- à l'intérieur
  - dossier pour les ateliers
  - dossiers pour chaque cours (exemples démo)
  - dossier pour le projet final
  - dossier pour le minitest
  - dossier pour l'examen
  - dossier pour les quiz?

2) Montrer ipynb S1-S2

3) quiz code vs tests Moodle 
- S2: analyse de problèmes
- S3: 1 ordinogramme + variables + print + transtypage
- S4: programme (variables, input, types de données et transtypage)
- S5: programme (variables, input, if, if imbriqués)
- S6: 2 programmes (boucles while et for)
- S7: programme (liste et chaines)
- S8: pas de quiz
- S9: programme (fonction) 50% matières S1-S6; 50% fonctions
- S10: exam
- S11: pas de quiz, début du projet (pandas)
- S12: pandas, projet (matplotlib)
- S13: matplot, projet (numpy)
- S14: numpy, projet
- S15: eval projet: petits programmes en lien au projet 


4) fréquence des quiz (au 2 semaines?)

5) leur donner des pistes d'autonomie (plan de cours et calendriers pour dates, matiere, etc.)

6) Les faire coder plus avec l'analyse du problème pour qu'ils apprennent à faire le lien entre énoncé et langage

7) clarifier, simplifier les objectifs d'apprentissage

8) Classe inversée

9) le quiz commence en même temps pour tout le monde les 10 premières minutes (temps heur debut et fin). Porte fermée. après 5 minutes de pause

10) leur faire changer l'écran partagé

11) leur demander (S2-S4) horaire semaine prochaine, évaluation à venir

12) après le quiz je fais la correction, donc ne m'appelez pas individuellement

13) les faire noter les réponses aux questions qu'ils posent souvent alors qu'ils ont déjà la réponse:
- Infos dans les courriels
- Infos dans le plan de cours
- Infos sur le site

- S4 p1 exemple avec if

prog-en-sciences@outlook.com
Pr0gr@mm@t10n








